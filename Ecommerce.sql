DROP DATABASE IF EXISTS Ecommerce_DB;
CREATE DATABASE Ecommerce_DB;
USE Ecommerce_DB;

-- CUSTOMER table
CREATE TABLE CUSTOMER (
    Id VARCHAR(50) NOT NULL PRIMARY KEY,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    PhoneNo VARCHAR(15) NOT NULL,
    HashedPassword VARCHAR(60) NOT NULL,
    EmailAddress VARCHAR(250) NOT NULL UNIQUE,
    MemberStatus ENUM('REGULAR', 'SILVER', 'GOLD', 'PLATINUM') NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- ADDRESS table
CREATE TABLE ADDRESS (
    AddressId VARCHAR(50) NOT NULL PRIMARY KEY,
    CustomerId VARCHAR(50) NOT NULL,
    Address1 VARCHAR(250) NOT NULL,
    Address2 VARCHAR(250),
    City VARCHAR(250) NOT NULL,
    State VARCHAR(250),
    Country VARCHAR(250) NOT NULL,
    Zipcode VARCHAR(250) NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES CUSTOMER(Id)
);

-- CREDIT_LINE table
CREATE TABLE CREDIT_LINE (
    CustomerId VARCHAR(50) NOT NULL,
    CustomerName VARCHAR(101) NOT NULL, 
    PRIMARY KEY (CustomerId),
    FOREIGN KEY (CustomerId) REFERENCES CUSTOMER(Id)
);


-- PRODUCT table
CREATE TABLE PRODUCT (
    ProductId VARCHAR(50) NOT NULL PRIMARY KEY,
    ProductName VARCHAR(255) NOT NULL,
    ProductDescription VARCHAR(500) NOT NULL,
    ProductType ENUM('Desktop', 'Laptop', 'Printer', 'Accessory') NOT NULL,
    Price DOUBLE NOT NULL
);

-- ORDERS table
CREATE TABLE ORDERS (
    OrderId VARCHAR(50) NOT NULL PRIMARY KEY,
    CustomerId VARCHAR(50) NOT NULL,
    ProductId VARCHAR(50) NOT NULL,
    FOREIGN KEY (ProductId) REFERENCES PRODUCT(ProductId),
    FOREIGN KEY (CustomerId) REFERENCES CUSTOMER(Id),
    DateOrdered TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- PAYMENT table
CREATE TABLE PAYMENT (
    PaymentId VARCHAR(50) NOT NULL PRIMARY KEY,
    CustomerId VARCHAR(50) NOT NULL,
    OrderId VARCHAR(50) NOT NULL,
    FOREIGN KEY (CustomerId) REFERENCES CUSTOMER(Id),
    FOREIGN KEY (OrderId) REFERENCES ORDERS(OrderId),
    Amount DOUBLE NOT NULL
);

-- PAYMENT_METHOD table
CREATE TABLE PAYMENT_METHOD (
    PaymentMethodId VARCHAR(50) NOT NULL PRIMARY KEY,
    PaymentId VARCHAR(50) NOT NULL,
    FOREIGN KEY (PaymentId) REFERENCES PAYMENT(PaymentId),
    CardType VARCHAR(60) NOT NULL,
    CardOwner VARCHAR(255) NOT NULL,
    ExpYear INT NOT NULL,
    ExpMonth INT NOT NULL,
    CardNo VARCHAR(20) NOT NULL,
    SecurityNo INT NOT NULL,
    BillingAddress VARCHAR(500) NOT NULL
);

-- SHIPMENT table
CREATE TABLE SHIPMENT (
    ShipmentId VARCHAR(50) NOT NULL PRIMARY KEY,
    OrderId VARCHAR(50) NOT NULL,
    FOREIGN KEY (OrderId) REFERENCES ORDERS(OrderId),
    CustomerName VARCHAR(255) NOT NULL,
    ShipmentAddress VARCHAR(500) NOT NULL,
    OrderStatus VARCHAR(60) NOT NULL,
    OrderLocation VARCHAR(255) NOT NULL,
    OrderShipped TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	OrderDelivered TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

